#!/bin/sh

# Create symlink as hostos
cmdline=`cat /proc/cmdline`
host="${cmdline#*hostos=}"
host="${host%% *}"
desktop="$HOME/Bureau"
target=/media
share_id="share_"

[ -z "$SUDO_UID" ] && USER_UID=`id -u $USER` || USER_UID=$SUDO_UID
[ -z "$SUDO_USER" ] && USERNAME=$USER || USERNAME=$SUDO_USER

# Set $IFS to end-of-line and coma
ORIGIFS=$IFS
IFS=`echo -en ",\n\b"`

# Parse VBoxControl output
share_names=()
share_labels=()
i=0
for ligne in `/usr/bin/VBoxControl -nologo guestproperty enumerate | grep $share_id`; do
	case "${ligne%%:*}" in
	" value")
		share_names[$i]="${ligne#*: }"
		i=$(( $i + 1 ))
		;;
	"Name")
		share_labels[$i]="${ligne#*: share_}"
		;;
	esac
done

# Remove old shares
for ligne in `cat $HOME/.sharelinks`
do
	unlink "${desktop}/${ligne%:*}"
	rm -Rf "${target}/${ligne#*:}"
done
echo "" > $HOME/.sharelinks

# Create new shares
i=0
for share_label in ${share_labels[@]}; do
	share_name=${share_names[$i]}

	[ -d "$target/$share_label" ] || mkdir "$target/$share_label"
	
	echo "mount.vboxsf \"$share_label\" \"${target}/${share_label}\" -o \"uid=$USER_UID,rw\""
	mountvboxsf "$share_label" "${target}/${share_label}" -o "uid=$USER_UID,rw"
	if [ $? -eq 0 ]; then
		echo "ln -s -f \"${target}/${share_label}\" \"${desktop}/$share_name\""
		ln -s -f "${target}/${share_label}" "${desktop}/$share_name"
		echo "${share_name}:${share_label}" >> $HOME/.sharelinks
	fi

	i=$(( $i + 1 ))
done

# On MAC-OSX hosts, mount UFO part as real device
host="${cmdline#*hostos=}"
host="${host%% *}"
[ "$host" == "macosx" ] && sudo -u $USERNAME gnome-mount --device /dev/sda1

IFS=$ORIGIFS


