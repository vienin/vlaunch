#!/bin/sh

TEXTDOMAIN=vlaunch-guest

# Create symlink as hostos
cmdline=`cat /proc/cmdline`
for arg in $cmdline
do
	if [ "${arg##hostos=}" != "${arg}" ]; then
		hostos=${arg##hostos=}
	fi
done
desktop=`xdg-user-dir DESKTOP`
target=/media
share_id="/UFO/Shares/"
user=`basename $HOME`

mount_share_and_link() {

	share_label="$1"
	share_name="$2"

	[ -d "$target/$share_label" ] || mkdir "$target/$share_label"

	mountpoint "$target/$share_label" 2> /dev/null
	if [ $? -ne 0 ]; then
		mount.vboxsf "$share_label" "${target}/${share_label}" -o "uid=$USER_UID,rw,dmode=755,fmode=755"
	fi
	
	if [ $? -eq 0 ]; then
		ln -s -f "${target}/${share_label}" "$HOME/$share_name"
		echo "${share_name};${share_label}" >> $HOME/.sharelinks

		echo "#!/usr/bin/env xdg-open
[Desktop Entry]
Encoding=UTF-8
Version=1.0
Type=Link
URL=$HOME/$share_name
Name=$share_name" > ${desktop}/$share_name.desktop

		if [ "${share_label%hosthome}" != "${share_label}" ]; then
			echo "Icon=sf_${hostos}.png" >> ${desktop}/$share_name.desktop
                else
			echo "Icon=sf_usb.png" >> ${desktop}/$share_name.desktop
		fi
		chown $user:$user ${desktop}/$share_name.desktop
	fi
}

[ -z "$USERHELPER_UID" ] && USER_UID=`id -u $USER` || USER_UID=$USERHELPER_UID

# Set $IFS to end-of-line and coma
ORIGIFS=$IFS
IFS=`echo -en ",\n\b"`

# Remove old shares
echo "" > $HOME/.sharelinks.new
for ligne in `cat $HOME/.sharelinks`
do
	mountpoint "${target}/${ligne#*;}" 2> /dev/null
	if [ $? -eq 0 ]; then
		echo $ligne >> $HOME/.sharelinks.new
	else
		unlink "$HOME/${ligne%;*}"
		rm "${desktop}/${ligne%;*}.desktop"
		rmdir "${target}/${ligne#*;}"
	fi
done
cat $HOME/.sharelinks.new > $HOME/.sharelinks
rm -f $HOME/.sharelinks.new

runlevel=`runlevel | cut -d " " -f 2`
[ "$runlevel" != "4" ] && exit

# Parse VBoxControl output
share_names=()
share_labels=()
i=0
for ligne in `/usr/bin/VBoxControl -nologo guestproperty enumerate -patterns "/UFO/Com/HostToGuest/Shares/ReadyToMount/*"`; do
	case "${ligne%%:*}" in
	" value")
		[ "${lab#*_}" == "None" ] && continue
		share_names[$i]="${ligne#*: }"
		i=$(( $i + 1 ))
		;;
	"Name")
		lab="${ligne#*: /UFO/Com/HostToGuest/Shares/ReadyToMount/}"
		[ "${lab#*_}" == "None" ] && continue
		share_labels[$i]="$lab"
		;;
	esac
done

# Create new shares
i=0
for label in ${share_labels[@]}; do
	name=${share_names[$i]}

	mount_share_and_link $label $name

	i=$(( $i + 1 ))
done

awaited_share_time="0"
while [ 1 ]; do
	for ligne in `/usr/bin/VBoxControl -nologo guestproperty wait "/UFO/Com/HostToGuest/Shares/*" -timestamp "$awaited_share_time"`; do

		case "${ligne%%:*}" in
		"Value")
			awaited_share_tuple="${ligne#* }"
			awaited_share_name="${awaited_share_tuple%;*}"
			awaited_share_mntpt="${awaited_share_tuple#*;}"
			;;
		"Name")
			awaited_share_tuple="${ligne#*: /UFO/Com/HostToGuest/Shares/}"
			awaited_share_state="${awaited_share_tuple%/*}"
			awaited_share_label="${awaited_share_tuple#*/}"
			;;
		"Timestamp")
			a="${ligne#*: }"
			awaited_share_time="${a% ns}"
			;;
		esac
	done
	echo "Received guest property  \"/UFO/Com/HostToGuest/Shares/${awaited_share_state}\" for share \"${awaited_share_label}\", name \"${awaited_share_name}\", mntpoint \"${awaited_share_mntpt}\""
    
	case "$awaited_share_state" in
	"AskToUser")
		zenity --question --title=$"USB device"
		       --text=$"A new USB device has been detected,\n\n"\
		              $"$awaited_share_name mounted on $awaited_share_mntpt\n\n"\
		              $"Do you want to mount it on your UFO desktop ?"
		       --window-icon=/usr/share/icons/UFO/48x48/emblems/emblem-usb.png
		if [ $? == 0 ]; then
		    /usr/bin/VBoxControl -nologo guestproperty set "/UFO/Com/GuestToHost/Shares/UserAccept/$awaited_share_label" "$awaited_share_name;$awaited_share_mntpt"
		fi
		;;
	"ReadyToMount")
		mount_share_and_link $awaited_share_label $awaited_share_name
		;;
	"Remove")
		unlink "${desktop}/${awaited_share_label}"
		umount $awaited_share_mntpt
		rmdir "${target}/${awaited_share_label}"
		;;
	esac
done

IFS=$ORIGIFS
